/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto;

import java.awt.Color;
import java.awt.Image;
import javax.swing.*;

/**
 *
 * @author SENA
 */
public class calculadora extends javax.swing.JFrame {

    /**
     * Creates new form calculadora
     */
    public calculadora() {
        initComponents();
        setTitle("Calculadora de Resistencias");
        this.setLocationRelativeTo(null);
        SetImageLabel(ayuda,"src/imagenes/resistencias.jpg");
        SetImageLabel(cable,"src/imagenes/cable.png");
        
    }
    int munegro = 0;
    int mumarron = 1;
    int murojo = 2;
    int munaranja = 3;
    int muamarillo = 4;
    int muverde = 5;
    int muazul = 6;
    int muvioleta = 7;
    int mugris = 8;
    int mublanco = 9;
    
    int dnegro = 0;
    int dmarron = 1;
    int drojo = 2;
    int dnaranja = 3;
    int damarillo = 4;
    int dverde = 5;
    int dazul = 6;
    int dvioleta = 7;
    int dgris = 8;
    int dblanco = 9;
    
    
    int mnegro = 1;
    int mmarron = 10;
    int mrojo = 100;
    int mnaranja = 1000;
    int mamarillo = 10000;
    int mverde = 100000;
    int mazul = 1000000;
    int mvioleta = 10000000;
    int mgris = 100000000;
    int mblanco = 1000000000;
    double moro = 0.1;
    double mplata = 0.01;

    double tmarron = 1;
    double trojo = 2;
    double tverde = 0.5;
    double tazul = 0.25;
    double tvioleta = 0.1;
    double tgris = 0.05;
    double toro = 5;
    double tplata = 10;
    double tsincolor = 20;

    
    String cambiarmedida;
    String cambiarcolor;
    int primerdigito;
    int segundodigito;
    int multiplicador;
    double tolerancia;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        op1 = new javax.swing.JComboBox<>();
        op2 = new javax.swing.JComboBox<>();
        op3 = new javax.swing.JComboBox<>();
        op4 = new javax.swing.JComboBox<>();
        R1 = new javax.swing.JButton();
        R2 = new javax.swing.JButton();
        R3 = new javax.swing.JButton();
        R4 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Ttolerancia = new javax.swing.JTextField();
        cable = new javax.swing.JLabel();
        cal = new javax.swing.JButton();
        Tresistencia = new javax.swing.JTextField();
        respuesta = new javax.swing.JLabel();
        limpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        respuesta2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        medidas = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        buscarcolores = new javax.swing.JButton();
        reinicio = new javax.swing.JButton();
        ayuda = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        op1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Negro", "Marron", "Rojo", "Naranja", "Amarillo", "Verde", "Azul", "Violeta", "Gris", "Blanco" }));
        op1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op1ActionPerformed(evt);
            }
        });
        getContentPane().add(op1, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 192, -1, -1));

        op2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Negro", "Marron", "Rojo", "Naranja", "Amarillo", "Verde", "Azul", "Violeta", "Gris", "Blanco" }));
        op2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op2ActionPerformed(evt);
            }
        });
        getContentPane().add(op2, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 237, -1, -1));

        op3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Negro", "Marron", "Rojo", "Naranja", "Amarillo", "Verde", "Azul", "Violeta", "Gris", "Blanco", "Oro", "Plata" }));
        op3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op3ActionPerformed(evt);
            }
        });
        getContentPane().add(op3, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 282, -1, -1));

        op4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "N/A", "Marron", "Rojo", "Verde", "Azul", "Violeta", "Gris", "Oro", "Plata" }));
        op4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                op4ActionPerformed(evt);
            }
        });
        getContentPane().add(op4, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 327, -1, -1));

        R1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R1ActionPerformed(evt);
            }
        });
        getContentPane().add(R1, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 10, 30, 140));

        R2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R2ActionPerformed(evt);
            }
        });
        getContentPane().add(R2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 20, 100));
        getContentPane().add(R3, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, 20, 100));
        getContentPane().add(R4, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 10, 30, 140));

        jLabel5.setText("C1");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 195, -1, -1));

        jLabel6.setText("C2");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 240, -1, -1));

        jLabel7.setText("C3");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 288, -1, -1));

        jLabel8.setText("C4");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 330, -1, -1));

        Ttolerancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TtoleranciaActionPerformed(evt);
            }
        });
        getContentPane().add(Ttolerancia, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 350, 80, -1));

        cable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(cable, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, 460, 170));

        cal.setText("CALCULAR");
        cal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calActionPerformed(evt);
            }
        });
        getContentPane().add(cal, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 180, 130, -1));

        Tresistencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TresistenciaActionPerformed(evt);
            }
        });
        getContentPane().add(Tresistencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 120, -1));
        getContentPane().add(respuesta, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 220, 100, 20));

        limpiar.setText("LIMPIAR");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });
        getContentPane().add(limpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 280, -1, -1));

        jLabel1.setText("RESISTENCIA:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 180, -1, -1));
        getContentPane().add(respuesta2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 280, 60, 20));

        jLabel4.setText("TOLERANCIA:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 250, -1, -1));

        medidas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "立", "m立", "k立", "M立" }));
        medidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medidasActionPerformed(evt);
            }
        });
        getContentPane().add(medidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 60, -1));

        jLabel9.setText("MEDIDA");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 70, 30));

        buscarcolores.setText("BUSCAR COLORES");
        buscarcolores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarcoloresActionPerformed(evt);
            }
        });
        getContentPane().add(buscarcolores, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 325, 160, -1));

        reinicio.setText("RESET");
        reinicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinicioActionPerformed(evt);
            }
        });
        getContentPane().add(reinicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 50, 80, 70));

        ayuda.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(ayuda, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 20, 520, 330));

        jLabel2.setText("RESISTENCIA");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 330, -1, -1));

        jLabel3.setText("TOLERANCIA");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 330, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void op1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op1ActionPerformed
        //colores de la casilla 1
        cambiarcolor = (String) op1.getSelectedItem();

        if ("Marron".equals(cambiarcolor)) {
            R1.setBackground(new Color(139, 69, 19));
        }
        if ("Rojo".equals(cambiarcolor)) {
            R1.setBackground(Color.RED);
        }
        if ("Naranja".equals(cambiarcolor)) {
            R1.setBackground(Color.ORANGE);
        }
        if ("Amarillo".equals(cambiarcolor)) {
            R1.setBackground(Color.YELLOW);
        }
        if ("Verde".equals(cambiarcolor)) {
            R1.setBackground(Color.GREEN);
        }
        if ("Azul".equals(cambiarcolor)) {
            R1.setBackground(Color.BLUE);
        }
        if ("Violeta".equals(cambiarcolor)) {
            R1.setBackground(new Color(128, 0, 128));
        }
        if ("Gris".equals(cambiarcolor)) {
            R1.setBackground(Color.GRAY);
        }
        if ("Blanco".equals(cambiarcolor)) {
            R1.setBackground(Color.WHITE);
        }
        if ("Oro".equals(cambiarcolor)) {
            R1.setBackground(new Color(255, 215, 0));
        }
        if ("Plata".equals(cambiarcolor)) {
            R1.setBackground(new Color(192, 192, 192));
        }
        if ("Negro".equals(cambiarcolor)) {
            R1.setBackground(Color.BLACK);
        }
        if ("N/A".equals(cambiarcolor)) {
            R1.setBackground(null);
        }
    }//GEN-LAST:event_op1ActionPerformed

    private void op2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op2ActionPerformed
        //colores de la casilla 2
        cambiarcolor = (String) op2.getSelectedItem();

        if ("Marron".equals(cambiarcolor)) {
            R2.setBackground(new Color(139, 69, 19));
        }
        if ("Rojo".equals(cambiarcolor)) {
            R2.setBackground(Color.RED);
        }
        if ("Naranja".equals(cambiarcolor)) {
            R2.setBackground(Color.ORANGE);
        }
        if ("Amarillo".equals(cambiarcolor)) {
            R2.setBackground(Color.YELLOW);
        }
        if ("Verde".equals(cambiarcolor)) {
            R2.setBackground(Color.GREEN);
        }
        if ("Azul".equals(cambiarcolor)) {
            R2.setBackground(Color.BLUE);
        }
        if ("Violeta".equals(cambiarcolor)) {
            R2.setBackground(new Color(128, 0, 128));
        }
        if ("Gris".equals(cambiarcolor)) {
            R2.setBackground(Color.GRAY);
        }
        if ("Blanco".equals(cambiarcolor)) {
            R2.setBackground(Color.WHITE);
        }
        if ("Oro".equals(cambiarcolor)) {
            R2.setBackground(new Color(255, 215, 0));
        }
        if ("Plata".equals(cambiarcolor)) {
            R2.setBackground(new Color(192, 192, 192));
        }
        if ("Negro".equals(cambiarcolor)) {
            R2.setBackground(Color.BLACK);
        }
        if ("N/A".equals(cambiarcolor)) {
            R2.setBackground(null);
        }
    }//GEN-LAST:event_op2ActionPerformed

    private void op3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op3ActionPerformed
        //colores de la casilla 3
        cambiarcolor = (String) op3.getSelectedItem();

        if ("Marron".equals(cambiarcolor)) {
            R3.setBackground(new Color(139, 69, 19));
        }
        if ("Rojo".equals(cambiarcolor)) {
            R3.setBackground(Color.RED);
        }
        if ("Naranja".equals(cambiarcolor)) {
            R3.setBackground(Color.ORANGE);
        }
        if ("Amarillo".equals(cambiarcolor)) {
            R3.setBackground(Color.YELLOW);
        }
        if ("Verde".equals(cambiarcolor)) {
            R3.setBackground(Color.GREEN);
        }
        if ("Azul".equals(cambiarcolor)) {
            R3.setBackground(Color.BLUE);
        }
        if ("Violeta".equals(cambiarcolor)) {
            R3.setBackground(new Color(128, 0, 128));
        }
        if ("Gris".equals(cambiarcolor)) {
            R3.setBackground(Color.GRAY);
        }
        if ("Blanco".equals(cambiarcolor)) {
            R3.setBackground(Color.WHITE);
        }
        if ("Oro".equals(cambiarcolor)) {
            R3.setBackground(new Color(255, 215, 0));
        }
        if ("Plata".equals(cambiarcolor)) {
            R3.setBackground(new Color(192, 192, 192));
        }
        if ("Negro".equals(cambiarcolor)) {
            R3.setBackground(Color.BLACK);
        }
        if ("N/A".equals(cambiarcolor)) {
            R3.setBackground(null);
        }
    }//GEN-LAST:event_op3ActionPerformed

    private void op4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_op4ActionPerformed
        //colores de la casilla 4
        cambiarcolor = (String) op4.getSelectedItem();

        if ("Marron".equals(cambiarcolor)) {
            R4.setBackground(new Color(139, 69, 19));
        }
        if ("Rojo".equals(cambiarcolor)) {
            R4.setBackground(Color.RED);
        }
        if ("Naranja".equals(cambiarcolor)) {
            R4.setBackground(Color.ORANGE);
        }
        if ("Amarillo".equals(cambiarcolor)) {
            R4.setBackground(Color.YELLOW);
        }
        if ("Verde".equals(cambiarcolor)) {
            R4.setBackground(Color.GREEN);
        }
        if ("Azul".equals(cambiarcolor)) {
            R4.setBackground(Color.BLUE);
        }
        if ("Violeta".equals(cambiarcolor)) {
            R4.setBackground(new Color(128, 0, 128));
        }
        if ("Gris".equals(cambiarcolor)) {
            R4.setBackground(Color.GRAY);
        }
        if ("Blanco".equals(cambiarcolor)) {
            R4.setBackground(Color.WHITE);
        }
        if ("Oro".equals(cambiarcolor)) {
            R4.setBackground(new Color(255, 215, 0));
        }
        if ("Plata".equals(cambiarcolor)) {
            R4.setBackground(new Color(192, 192, 192));
        }
        if ("Negro".equals(cambiarcolor)) {
            R4.setBackground(Color.BLACK);
        }
        if ("N/A".equals(cambiarcolor)) {
            R4.setBackground(null);
        }
    }//GEN-LAST:event_op4ActionPerformed

    private void R1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_R1ActionPerformed

    private void R2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_R2ActionPerformed

    private void TtoleranciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TtoleranciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TtoleranciaActionPerformed

    private void calActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calActionPerformed

        // primer digito

        if (R1.getBackground().equals(new Color(139, 69, 19))) {
            primerdigito = dmarron;
        }
        if (R1.getBackground().equals(Color.RED)) {
            primerdigito = drojo;
        }
        if (R1.getBackground().equals(Color.ORANGE)) {
            primerdigito = dnaranja;
        }
        if (R1.getBackground().equals(Color.YELLOW)) {
            primerdigito = damarillo;
        }
        if (R1.getBackground().equals(Color.GREEN)) {
            primerdigito = dverde;
        }
        if (R1.getBackground().equals(Color.BLUE)) {
            primerdigito = dazul;
        }
        if (R1.getBackground().equals(Color.GRAY)) {
            primerdigito = dgris;
        }
        if (R1.getBackground().equals(Color.WHITE)) {
            primerdigito = dblanco;
        }
        if (R1.getBackground().equals(Color.BLACK)) {
            primerdigito = dnegro;
        }
        if (R1.getBackground().equals(new Color(128, 0, 128))) {
            primerdigito = dvioleta;
        }
        // segundo digito

        if (R2.getBackground().equals(new Color(139, 69, 19))) {
            segundodigito = dmarron;
        }
        if (R2.getBackground().equals(Color.RED)) {
            segundodigito = drojo;
        }
        if (R2.getBackground().equals(Color.ORANGE)) {
            segundodigito = dnaranja;
        }
        if (R2.getBackground().equals(Color.YELLOW)) {
            segundodigito = damarillo;
        }
        if (R2.getBackground().equals(Color.GREEN)) {
            segundodigito = dverde;
        }
        if (R2.getBackground().equals(Color.BLUE)) {
            segundodigito = dazul;
        }
        if (R2.getBackground().equals(Color.GRAY)) {
            segundodigito = dgris;
        }
        if (R2.getBackground().equals(Color.WHITE)) {
            segundodigito = dblanco;
        }
        if (R2.getBackground().equals(Color.BLACK)) {
            segundodigito = dnegro;
        }
        if (R2.getBackground().equals(new Color(128, 0, 128))) {
            segundodigito = dvioleta;
        }

        // multiplicador
        if (R3.getBackground().equals(new Color(139, 69, 19))) {
            multiplicador = mmarron;
        }
        if (R3.getBackground().equals(Color.RED)) {
            multiplicador = mrojo;
        }
        if (R3.getBackground().equals(Color.ORANGE)) {
            multiplicador = mnaranja;
        }
        if (R3.getBackground().equals(Color.YELLOW)) {
            multiplicador = mamarillo;
        }
        if (R3.getBackground().equals(Color.GREEN)) {
            multiplicador = mverde;
        }
        if (R3.getBackground().equals(Color.BLUE)) {
            multiplicador = mazul;
        }
        if (R3.getBackground().equals(Color.GRAY)) {
            multiplicador = mgris;
        }
        if (R3.getBackground().equals(Color.WHITE)) {
            multiplicador = mblanco;
        }
        if (R3.getBackground().equals(Color.BLACK)) {
            multiplicador = mnegro;
        }
        if (R3.getBackground().equals(new Color(128, 0, 128))) {
            multiplicador = mvioleta;
        }
        if (R3.getBackground().equals(new Color(255, 215, 0))) {
            double multiplicador = moro;
        }
        if (R3.getBackground().equals(new Color(192, 192, 192))) {
            double multiplicador = mplata;
        }

        // tolerancia
        if (R4.getBackground().equals(new Color(139, 69, 19))) {
            tolerancia = tmarron;
        }
        if (R4.getBackground().equals(Color.RED)) {
            tolerancia = trojo;
        }
        if (R4.getBackground().equals(Color.GREEN)) {
            tolerancia = tverde;
        }
        if (R4.getBackground().equals(Color.BLUE)) {
            tolerancia = tazul;
        }
        if (R4.getBackground().equals(Color.GRAY)) {
            tolerancia = tgris;
        }
        if (op4.getSelectedItem().equals("N/A")) {
            tolerancia = tsincolor;
        }
        if (R4.getBackground().equals(new Color(128, 0, 128))) {
            tolerancia = tvioleta;
        }
        if (R4.getBackground().equals(new Color(255, 215, 0))) {
            tolerancia = toro;
        }
        if (R4.getBackground().equals(new Color(192, 192, 192))) {
            tolerancia = tplata;
        }
        

        // Calcular el valor
        double calcular = (primerdigito * 10 + segundodigito) * multiplicador;

        //cambiar medidas
        respuesta2.setText("" + tolerancia);
        cambiarmedida = (String) medidas.getSelectedItem();
        if ("立".equals(cambiarmedida)) {
            respuesta.setText("" + calcular + " 立");
        }
        if ("m立".equals(cambiarmedida)) {
            calcular = calcular * 10;
            respuesta.setText("" + calcular + " m立");
        }
        if ("k立".equals(cambiarmedida)) {
            calcular = calcular / 1000;
            respuesta.setText("" + calcular + " k立");
        }
        if ("M立".equals(cambiarmedida)) {
            calcular = calcular / 1000000;
            respuesta.setText("" + calcular + " M立");
        }

    }//GEN-LAST:event_calActionPerformed

    private void TresistenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TresistenciaActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_TresistenciaActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        // limpiar
        respuesta.setText("");
        respuesta2.setText("");
        Ttolerancia.setText("");
        Tresistencia.setText("");
    }//GEN-LAST:event_limpiarActionPerformed

    private void medidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medidasActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_medidasActionPerformed

    private void buscarcoloresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarcoloresActionPerformed
        // TODO add your handling code here:

        // Obtener el texto del Tresistencia y convertirlo a long, tipo numerico
        String resis = Tresistencia.getText();
        long resistencia = Long.parseLong(resis);

        //mutiplicador, mide la longitud de la resistencia y le resta los dos primeros digitos
        int multiplicador = resis.length() - 2;

        //convercion de tolerancia texto a double
        String tole = Ttolerancia.getText();
        double tolerancia = Double.parseDouble(tole);

        //comparacion tolerancia con la convercion
        if(tolerancia == tmarron){
            R4.setBackground(new Color(139, 69, 19));
        }if (tolerancia == tvioleta) {
            R4.setBackground(new Color(128, 0, 128));
        }if (tolerancia == trojo) {
            R4.setBackground(Color.RED);
        }if (tolerancia == tverde) {
            R4.setBackground(Color.GREEN);
        }if (tolerancia == tazul) {
            R4.setBackground(Color.BLUE);
        }if (tolerancia == tgris) {
            R4.setBackground(Color.GRAY);
        }if (tolerancia == toro) {
            R4.setBackground(new Color(255, 215, 0));
        }if (tolerancia == tplata) {
            R4.setBackground(new Color(192, 192, 192));
        }if (tolerancia == tsincolor) {
            R4.setBackground(null);
        }

        // toma los caracteres en la posicion 0 y 1 que nos dio Tresistencia
        char leerd1 = resis.charAt(0);
        char leerd2 = resis.charAt(1);

        // Convertir los caracteres a enteros
        int d1 = Character.getNumericValue(leerd1);
        int d2 = Character.getNumericValue(leerd2);

        //digito 1 y 2 de la resistencia
        if (d1 == dnegro) {
            R1.setBackground(Color.BLACK);
        }
        if (d2 == dnegro) {
            R2.setBackground(Color.BLACK);
        }
        if (d1 == dmarron) {
            R1.setBackground((new Color(139, 69, 19)));
        }
        if (d2 == dmarron) {
            R2.setBackground((new Color(139, 69, 19)));
        }
        if (d1 == drojo) {
            R1.setBackground(Color.RED);
        }
        if (d2 == drojo) {
            R2.setBackground(Color.RED);
        }
        if (d1 == dnaranja) {
            R1.setBackground(Color.ORANGE);
        }
        if (d2 == dnaranja) {
            R2.setBackground(Color.ORANGE);
        }
        if (d1 == damarillo) {
            R1.setBackground(Color.YELLOW);
        }
        if (d2 == damarillo) {
            R2.setBackground(Color.YELLOW);
        }
        if (d1 == dverde) {
            R1.setBackground(Color.GREEN);
        }
        if (d2 == dverde) {
            R2.setBackground(Color.GREEN);
        }
        if (d1 == dazul) {
            R1.setBackground(Color.BLUE);
        }
        if (d2 == dazul) {
            R2.setBackground(Color.BLUE);
        }
        if (d1 == dvioleta) {
            R1.setBackground(new Color(128, 0, 128));
        }
        if (d2 == dvioleta) {
            R2.setBackground(new Color(128, 0, 128));
        }
        if (d1 == dgris) {
            R1.setBackground(Color.GRAY);
        }
        if (d2 == dgris) {
            R2.setBackground(Color.GRAY);
        }
        if (d1 == dblanco) {
            R1.setBackground(Color.WHITE);
        }
        if (d2 == dblanco) {
            R2.setBackground(Color.WHITE);
        }

        //multiplicador
        if (multiplicador == munegro) {
            R3.setBackground(Color.BLACK);
        }
        if (multiplicador == mumarron) {
            R3.setBackground((new Color(139, 69, 19)));
        }
        if (multiplicador == murojo) {
            R3.setBackground(Color.RED);
        }
        if (multiplicador == munaranja) {
            R3.setBackground(Color.ORANGE);
        }
        if (multiplicador == muamarillo) {
            R3.setBackground(Color.YELLOW);
        }
        if (multiplicador == muverde) {
            R3.setBackground(Color.GREEN);
        }
        if (multiplicador == muazul) {
            R3.setBackground(Color.BLUE);
        }
        if (multiplicador == muvioleta) {
            R3.setBackground((new Color(128, 0, 128)));
        }
        if (multiplicador == mugris) {
            R3.setBackground(Color.GRAY);
        }
        if (multiplicador == mublanco) {
            R3.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_buscarcoloresActionPerformed

    private void reinicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinicioActionPerformed
        // TODO add your handling code here:
        R1.setBackground(null);
        R2.setBackground(null);
        R3.setBackground(null);
        R4.setBackground(null);
        op1.setSelectedItem("N/A");
        op2.setSelectedItem("N/A");
        op3.setSelectedItem("N/A");
        op4.setSelectedItem("N/A");
    }//GEN-LAST:event_reinicioActionPerformed
    private void SetImageLabel(JLabel labelName, String root){
        ImageIcon image = new ImageIcon(root);
        Icon icon = new ImageIcon(
        image.getImage().getScaledInstance(labelName.getWidth(),labelName.getHeight(), Image.SCALE_DEFAULT));
        labelName.setIcon(icon);
        this.repaint();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calculadora.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new calculadora().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton R1;
    private javax.swing.JButton R2;
    private javax.swing.JButton R3;
    private javax.swing.JButton R4;
    private javax.swing.JTextField Tresistencia;
    private javax.swing.JTextField Ttolerancia;
    private javax.swing.JLabel ayuda;
    private javax.swing.JButton buscarcolores;
    private javax.swing.JLabel cable;
    private javax.swing.JButton cal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton limpiar;
    private javax.swing.JComboBox<String> medidas;
    private javax.swing.JComboBox<String> op1;
    private javax.swing.JComboBox<String> op2;
    private javax.swing.JComboBox<String> op3;
    private javax.swing.JComboBox<String> op4;
    private javax.swing.JButton reinicio;
    private javax.swing.JLabel respuesta;
    private javax.swing.JLabel respuesta2;
    // End of variables declaration//GEN-END:variables
}
